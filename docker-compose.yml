
services:
  laravel-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-app
    volumes:
      - ./backend:/var/www
    depends_on:
      - mysql
      - mongo
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost
      - FRONTEND_URL=http://localhost/frontend
      - REVERB_HOST=laravel-reverb

  laravel-reverb:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-reverb
    command: php artisan reverb:start
    depends_on:
      - laravel-app
    ports:
      - "8080:8080"

  laravel-queue:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-queue
    command: php artisan queue:work 
    depends_on:
      - laravel-app
      - mysql

  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "5173:5173"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/public:/var/www/public
    depends_on:
      - laravel-app
      - react-app

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_DATABASE=FYP_DB
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3307:3306"

  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"

volumes:
  mysql-data:
  mongo-data: